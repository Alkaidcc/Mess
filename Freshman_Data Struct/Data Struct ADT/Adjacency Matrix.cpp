/* ????????????? */
 
#define MaxVertexNum 100    /* ?????????100 */
#define INFINITY 65535        /* ????????????????????????65535*/
typedef int Vertex;         /* ??????ùù???????,????? */
typedef int WeightType;        /* ???????????? */
typedef char DataType;        /* ????ùù?????????????????? */
 
/* ?????? */
typedef struct ENode *PtrToENode;
struct ENode{
    Vertex V1, V2;      /* ?????<V1, V2> */
    WeightType Weight;  /* ??? */
};
typedef PtrToENode Edge;
        
/* ???????? */
typedef struct GNode *PtrToGNode;
struct GNode{
    int Nv;  /* ?????? */
    int Ne;  /* ????   */
    WeightType G[MaxVertexNum][MaxVertexNum]; /* ?????? */
    DataType Data[MaxVertexNum];      /* ?ùù??????? */
    /* ??????????????????????????Data[]??????ùù??? */
};
typedef PtrToGNode MGraph; /* ????????ùù??????? */
 
 
 
MGraph CreateGraph( int VertexNum )
{ /* ??????????VertexNum????????ùù??? */
    Vertex V, W;
    MGraph Graph;
     
    Graph = (MGraph)malloc(sizeof(struct GNode)); /* ????? */
    Graph->Nv = VertexNum;
    Graph->Ne = 0;
    /* ??????????? */
    /* ????????????????0???????(Graph->Nv - 1) */
    for (V=0; V<Graph->Nv; V++)
        for (W=0; W<Graph->Nv; W++)  
            Graph->G[V][W] = INFINITY;
             
    return Graph; 
}
        
void InsertEdge( MGraph Graph, Edge E )
{
     /* ????? <V1, V2> */
     Graph->G[E->V1][E->V2] = E->Weight;    
     /* ???????????????????<V2, V1> */
     Graph->G[E->V2][E->V1] = E->Weight;
}
 
MGraph BuildGraph()
{
    MGraph Graph;
    Edge E;
    Vertex V;
    int Nv, i;
     
    scanf("%d", &Nv);   /* ????????? */
    Graph = CreateGraph(Nv); /* ???????Nv????????ùù??? */ 
     
    scanf("%d", &(Graph->Ne));   /* ??????? */
    if ( Graph->Ne != 0 ) { /* ????ùù? */ 
        E = (Edge)malloc(sizeof(struct ENode)); /* ???????? */ 
        /* ??????????"??? ??? ???"???????????? */
        for (i=0; i<Graph->Ne; i++) {
            scanf("%d %d %d", &E->V1, &E->V2, &E->Weight); 
            /* ?????????????????Weight?????????? */
            InsertEdge( Graph, E );
        }
    } 
 
    /* ????????????????????????? */
    for (V=0; V<Graph->Nv; V++) 
        scanf(" %c", &(Graph->Data[V]));
 
    return Graph;
}